// <auto-generated />
using System;
using HRApplication.DataAccess.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HRApplication.DataAccess.Migrations
{
    [DbContext(typeof(HRAppDBContext))]
    [Migration("20191025085654_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HRApplication.DataAccess.Entities.ApplicationStates", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("ApplicationStates");
                });

            modelBuilder.Entity("HRApplication.DataAccess.Entities.ApplicationStatusHistory", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<Guid>("ApplicationId");

                    b.Property<Guid>("ApplicationStateId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("ApplicationStateId");

                    b.ToTable("ApplicationStatusHistory");
                });

            modelBuilder.Entity("HRApplication.DataAccess.Entities.Applications", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<Guid>("ApplicationStatusHistoryId");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("date");

                    b.Property<Guid>("CreatedById");

                    b.Property<string>("CurrentApplicationStateName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CvfileName")
                        .HasColumnName("CVFileName")
                        .HasMaxLength(255);

                    b.Property<Guid>("OfferId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("OfferId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("HRApplication.DataAccess.Entities.ContractTypes", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("ContractTypeName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("ContractTypes");
                });

            modelBuilder.Entity("HRApplication.DataAccess.Entities.Offers", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<Guid?>("ContractTypeId");

                    b.Property<Guid?>("CreatedById");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("HoursPerWeek")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<bool>("PartTimeWork");

                    b.Property<string>("Position")
                        .HasMaxLength(255);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ContractTypeId");

                    b.HasIndex("CreatedById");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("HRApplication.DataAccess.Entities.UserRoles", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("HRApplication.DataAccess.Entities.Users", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .HasMaxLength(255);

                    b.Property<string>("LastName")
                        .HasMaxLength(255);

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HRApplication.DataAccess.Entities.ApplicationStatusHistory", b =>
                {
                    b.HasOne("HRApplication.DataAccess.Entities.Applications", "Application")
                        .WithMany("ApplicationStatusHistory")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK_ApplicationStatusHistory_Applicationss");

                    b.HasOne("HRApplication.DataAccess.Entities.ApplicationStates", "ApplicationState")
                        .WithMany("ApplicationStatusHistory")
                        .HasForeignKey("ApplicationStateId")
                        .HasConstraintName("FK_ApplicationStatusHistory_ApplicationStates");
                });

            modelBuilder.Entity("HRApplication.DataAccess.Entities.Applications", b =>
                {
                    b.HasOne("HRApplication.DataAccess.Entities.Users", "CreatedBy")
                        .WithMany("Applications")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Applications_Users");

                    b.HasOne("HRApplication.DataAccess.Entities.Offers", "Offer")
                        .WithMany("Applications")
                        .HasForeignKey("OfferId")
                        .HasConstraintName("FK_Applications_Offers");
                });

            modelBuilder.Entity("HRApplication.DataAccess.Entities.Offers", b =>
                {
                    b.HasOne("HRApplication.DataAccess.Entities.ContractTypes", "ContractType")
                        .WithMany("Offers")
                        .HasForeignKey("ContractTypeId")
                        .HasConstraintName("FK_Offers_ContractTypes");

                    b.HasOne("HRApplication.DataAccess.Entities.Users", "CreatedBy")
                        .WithMany("Offers")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Offers_Users");
                });

            modelBuilder.Entity("HRApplication.DataAccess.Entities.Users", b =>
                {
                    b.HasOne("HRApplication.DataAccess.Entities.UserRoles", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Users_UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
